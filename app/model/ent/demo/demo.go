// Code generated by entc, DO NOT EDIT.

package demo

const (
	// Label holds the string label denoting the demo type in the database.
	Label = "demo"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDemo holds the string denoting the demo field in the database.
	FieldDemo = "demo"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldUpdator holds the string denoting the updator field in the database.
	FieldUpdator = "updator"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpadtedAt holds the string denoting the upadted_at field in the database.
	FieldUpadtedAt = "upadted_at"

	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildren holds the string denoting the children edge name in mutations.
	EdgeChildren = "children"

	// Table holds the table name of the demo in the database.
	Table = "demos"
	// ParentTable is the table the holds the parent relation/edge.
	ParentTable = "demos"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "demo_children"
	// ChildrenTable is the table the holds the children relation/edge.
	ChildrenTable = "demos"
	// ChildrenColumn is the table column denoting the children relation/edge.
	ChildrenColumn = "demo_children"
)

// Columns holds all SQL columns for demo fields.
var Columns = []string{
	FieldID,
	FieldCode,
	FieldName,
	FieldDemo,
	FieldStatus,
	FieldCreator,
	FieldUpdator,
	FieldCreatedAt,
	FieldUpadtedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Demo type.
var ForeignKeys = []string{
	"demo_children",
}

var (
	// StatusValidator is a validator for the "status" field. It is called by the builders before save.
	StatusValidator func(int) error
)
