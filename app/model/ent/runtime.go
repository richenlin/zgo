// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/suisrc/zgo/app/model/ent/demo"
	"github.com/suisrc/zgo/app/model/ent/schema"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	demoFields := schema.Demo{}.Fields()
	_ = demoFields
	// demoDescStatus is the schema descriptor for status field.
	demoDescStatus := demoFields[3].Descriptor()
	// demo.StatusValidator is a validator for the "status" field. It is called by the builders before save.
	demo.StatusValidator = func() func(int) error {
		validators := demoDescStatus.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(status int) error {
			for _, fn := range fns {
				if err := fn(status); err != nil {
					return err
				}
			}
			return nil
		}
	}()
}
