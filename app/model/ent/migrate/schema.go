// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:        "accounts",
		Columns:     AccountsColumns,
		PrimaryKey:  []*schema.Column{AccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DemosColumns holds the columns for the "demos" table.
	DemosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "demo", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt},
		{Name: "creator", Type: field.TypeString},
		{Name: "updator", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "upadted_at", Type: field.TypeTime},
		{Name: "demo_children", Type: field.TypeInt, Nullable: true},
	}
	// DemosTable holds the schema information for the "demos" table.
	DemosTable = &schema.Table{
		Name:       "demos",
		Columns:    DemosColumns,
		PrimaryKey: []*schema.Column{DemosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "demos_demos_children",
				Columns: []*schema.Column{DemosColumns[9]},

				RefColumns: []*schema.Column{DemosColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MenusColumns holds the columns for the "menus" table.
	MenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// MenusTable holds the schema information for the "menus" table.
	MenusTable = &schema.Table{
		Name:        "menus",
		Columns:     MenusColumns,
		PrimaryKey:  []*schema.Column{MenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ResourcesColumns holds the columns for the "resources" table.
	ResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ResourcesTable holds the schema information for the "resources" table.
	ResourcesTable = &schema.Table{
		Name:        "resources",
		Columns:     ResourcesColumns,
		PrimaryKey:  []*schema.Column{ResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:        "roles",
		Columns:     RolesColumns,
		PrimaryKey:  []*schema.Column{RolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		DemosTable,
		MenusTable,
		ResourcesTable,
		RolesTable,
		UsersTable,
	}
)

func init() {
	DemosTable.ForeignKeys[0].RefTable = DemosTable
}
